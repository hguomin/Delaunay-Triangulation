{
  "name": "delaunay-triangulation",
  "version": "2.0.0",
  "description": "Simple javascript module for triangulation.",
  "main": "src/index.js",
  "bin": {
    "delaunay-triangulation": "bin/delaunay.js"
  },
  "scripts": {
    "test": "tape test/index.js",
    "bundle": "browserify src/index.js --standalone Delaunay -o bin/delaunay.js",
    "uglify": "uglifyjs bin/delaunay.js -m > bin/delaunay.min.js",
    "build": "npm run bundle && npm run uglify && npm run test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sokeroner/Delaunay-Triangulation.git"
  },
  "keywords": [
    "delaunay",
    "triangulation",
    "triangulate",
    "triangle",
    "browserify"
  ],
  "author": {
    "name": "Jean-Vincent Roger",
    "email": "jv.roger@84paris.com",
    "url": "http://www.84paris.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/sokeroner/Delaunay-Triangulation/issues"
  },
  "homepage": "https://github.com/sokeroner/Delaunay-Triangulation",
  "devDependencies": {
    "tape": "^4.0.0",
    "uglifyjs": "^2.4.10"
  },
  "testling": {
    "files": "test/index.js",
    "browsers": [
      "ie/8..latest",
      "firefox/15..latest",
      "chrome/18..latest",
      "chrome/canary",
      "opera/10..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "Delaunay Triangulation\n=============\n\nJavascript module for triangulation.\n\n### About Delaunay triangulation ###\n\nA Delaunay triangulation for a set P of points in a plane is a triangulation DT(P) such that no point in P is inside the [circumcircle](https://en.wikipedia.org/wiki/Circumscribed_circle#Triangles) of any triangle in DT(P). Get more information on the [Wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation).\n\n### Live demo ###\n\n- [Basic example](http://sokeroner.github.io/Delaunay-Triangulation/example1.html) \n\n### Installation ###\n```\nnpm install delaunay-triangulation --save\n```\n\n### Basic Usage Example ###\n\n```js\nvar Delaunay = require('delaunay-triangulation');\n\nvar vertices = [\n\t new Delaunay.Point (10, 14)\n\t,new Delaunay.Point (1, 15)\n\t,new Delaunay.Point (18, 10)\n\t,new Delaunay.Point (8, 10)\n\t,new Delaunay.Point (10, 20)\n \t// ...\n];\n\nvar triangles = Delaunay.triangulate( vertices );\nvar ctx = document.getElementById('canvas').getContext('2d');\nctx.strokeStyle = \"red\";\n\nfor ( var i = 0; i < L; i++ ) {\n\tvar t = triangles[ i ];\n\tctx.beginPath();\n\tctx.moveTo(t.p1.x, t.p1.y);\n\tctx.lineTo(t.p2.x, t.p2.y);\n\tctx.lineTo(t.p3.x, t.p3.y);\n\tctx.lineTo(t.p1.x, t.p1.y);\n\tctx.stroke();\n}\n\n```\n\n### Test ###\n\n[![testling badge](https://ci.testling.com/sokeroner/Delaunay-Triangulation.png)](https://ci.testling.com/sokeroner/Delaunay-Triangulation)\n\n\n### License ###\n\nThis content is released under the [MIT License](http://opensource.org/licenses/MIT).",
  "readmeFilename": "README.md",
  "gitHead": "3352e319544fb14cfd8686d2516c8031d25de468",
  "_id": "delaunay-triangulation@2.0.0",
  "_shasum": "e58a574cf83ba9d42548bd0589a923e66f20f5fb",
  "_from": "delaunay-triangulation@"
}
